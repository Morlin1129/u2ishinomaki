// Generated by CoffeeScript 1.10.0
(function() {
  this.Game = (function() {
    var YOUTUBE_ID, _clear, _crap, _craping, _delay, _end, _endTime, _fly, _game, _game_bg, _generateNote, _generateNoteCrap, _getTiming, _go_scr, _hover, _isChangeImage, _isNoteGenerateTimingCrap, _isNoteGenerateTimingSnap, _judge, _music, _opr, _proccesRootSceneFrame, _result, _score, _score_gage, _score_meter, _score_txt, _shadow, _slider_h, _status, _tempo, _timing_change, _timing_change_index, _timing_crap, _timing_crap_index, _timing_snap, _timing_snap_index, _window_height, _yt;

    YOUTUBE_ID = 'HNYkOJ-T63k';

    _game = null;

    _yt = null;

    _judge = null;

    _timing_crap = [8.25, 16.25, 20.25, 24.25, 32.25, 40.25, 48.25, 50.25, 52.25, 54.25, 56.25, 58.25, 60.25, 62.25, 24.25, 68.5, 75.5];

    _timing_snap = [8, 16, 20, 24, 28, 32, 36, 40, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 68, 72];

    _timing_change = [24, 48];

    _timing_crap_index = 0;

    _timing_snap_index = 0;

    _timing_change_index = 0;

    _status = "stop";

    _endTime = 80;

    _music = null;

    _tempo = 57.5;

    _opr = 8;

    _score = 1000;

    _game_bg = null;

    _score_txt = null;

    _score_gage = null;

    _delay = 1.34;

    _shadow = null;

    _crap = null;

    _go_scr = null;

    _result = null;

    _clear = null;

    _hover = null;

    _window_height = $(window).height();

    _slider_h = 350;

    _score_meter = null;

    _getTiming = function(timing) {
      return (timing / _tempo * 60) + _delay;
    };

    _craping = function() {
      _game.assets['ahh.wav'].clone().play();
      _crap.scaleX = 1.1;
      _crap.scaleY = 1.1;
      return setTimeout(function() {
        _crap.scaleX = 1;
        return _crap.scaleY = 1;
      }, 100);
    };

    function Game(parms) {
      enchant();
      _game = new Core(640, 1080);
      _game.fps = 30;
      _game.preload("icon.png", "shadow.png", "jayz.mp3", "whisper.wav", "game_bg1.jpg", "game_bg2.jpg", "game_bg3.jpg", "snap.wav", "crap.png", "ahh.wav", "splash.jpg", "go_scr.jpg", "cutIn.jpg", "start_button.png", "butterfly.png", "slider_1.png", "slider_2.png", "meter.png", "hover.png", "score_volume.png", "clear.jpg", "result.jpg");
      _game.start();
      _game.onload = function() {
        var cutIn, slider_1, splash, start_button;
        _game_bg = new Sprite(640, 1080);
        _game_bg.image = _game.assets["game_bg1.jpg"];
        _game_bg.x = 0;
        _game_bg.y = 0;
        _game.rootScene.addChild(_game_bg);
        _score_txt = new Label(200, 40);
        _score_txt.font = "36px libelsuit";
        _score_txt.x = 420;
        _score_txt.textAlign = 'right';
        _score_txt.y = 100;
        _score_txt.text = _score;
        _game.rootScene.addChild(_score_txt);
        _score_gage = new Sprite(579, 30);
        _score_gage.image = _game.assets["meter.png"];
        _score_gage.x = 30;
        _score_gage.y = 60;
        _game.rootScene.addChild(_score_gage);
        _score_meter = new Sprite(100, 30);
        _score_meter.image = _game.assets["score_volume.png"];
        _score_meter.x = 140;
        _score_meter.y = 60;
        _game.rootScene.addChild(_score_meter);
        slider_1 = new Sprite(455, 104);
        slider_1.image = _game.assets["slider_1.png"];
        slider_1.x = 640 - 455 - 20;
        slider_1.y = _window_height - 420;
        slider_1.addEventListener("touchstart", function(e) {
          if (!_hover) {
            _hover = new Sprite(104, 104);
            _hover.image = _game.assets["hover.png"];
            _hover.x = e.x - 52;
            _hover.y = _window_height - 340 - 86;
            return _game.rootScene.addChild(_hover);
          }
        });
        slider_1.addEventListener("touchmove", function(e) {
          if (_hover) {
            return _hover.x = e.x - 52;
          }
        });
        slider_1.addEventListener("touchend", function(e) {
          _hover.tl.removeFromScene();
          return _hover = null;
        });
        _game.rootScene.addChild(slider_1);
        _shadow = new Sprite(104, 104);
        _shadow.image = _game.assets["shadow.png"];
        _shadow.x = 164;
        _shadow.y = _window_height - 340 - 86;
        _shadow.addEventListener("touchstart", function(e) {
          _game.assets['snap.wav'].clone().play();
          _shadow.scaleX = 1.2;
          _shadow.scaleY = 1.2;
          return setTimeout(function() {
            _shadow.scaleX = 1;
            return _shadow.scaleY = 1;
          }, 100);
        });
        _game.rootScene.addChild(_shadow);
        _crap = new Sprite(160, 160);
        _crap.image = _game.assets["crap.png"];
        _crap.x = 20;
        _crap.y = _window_height - 250;
        _crap.addEventListener("touchstart", function(e) {
          return _craping();
        });
        _game.rootScene.addChild(_crap);
        _judge = new Label();
        _judge.font = "80px libelsuit";
        _judge.textAlign = "center";
        _judge.color = "#00FFFC";
        _judge.width = 200;
        _judge.x = 220;
        _judge.y = (_window_height / 2) - 20;
        _game.rootScene.addChild(_judge);
        start_button = new Sprite(341, 84);
        start_button.image = _game.assets["start_button.png"];
        start_button.x = 149;
        start_button.y = 440;
        start_button.addEventListener("touchstart", function(e) {
          _game.rootScene.addEventListener("enterframe", _proccesRootSceneFrame);
          if (_status !== 'playing') {
            _status = 'playing';
            _music = _game.assets['jayz.mp3'];
            _music.play();
            return start_button.tl.fadeOut(15).removeFromScene();
          }
        });
        _game.rootScene.addChild(start_button);
        _go_scr = new Sprite(640, 1080);
        _go_scr.image = _game.assets["go_scr.jpg"];
        _go_scr.addEventListener("touchstart", function(e) {
          var go_se;
          go_se = _game.assets['whisper.wav'];
          go_se.play();
          return setTimeout(function() {
            return _go_scr.tl.fadeOut(15).removeFromScene();
          }, 1000);
        });
        _game.rootScene.addChild(_go_scr);
        splash = new Sprite(640, 1080);
        splash.image = _game.assets["splash.jpg"];
        cutIn = new Sprite(640, 1080);
        cutIn.image = _game.assets["cutIn.jpg"];
        _game.rootScene.insertBefore(cutIn, splash);
        _game.rootScene.addChild(splash);
        return setTimeout(function() {
          return splash.tl.fadeOut(30).removeFromScene().then(function() {
            return setTimeout(function() {
              return cutIn.tl.fadeOut(15).removeFromScene();
            }, 1000);
          });
        }, 3000);
      };
    }

    _isNoteGenerateTimingSnap = function() {
      if (_timing_snap[_timing_snap_index] != null) {
        if (_music.currentTime > (_timing_snap[_timing_snap_index] * 58 / 60) - 3) {
          return true;
        }
      }
      return false;
    };

    _isNoteGenerateTimingCrap = function() {
      if (_timing_crap[_timing_crap_index] != null) {
        if (_music.currentTime > (_timing_crap[_timing_crap_index] * 58 / 60) - 3) {
          return true;
        }
      }
      return false;
    };

    _isChangeImage = function() {
      if (_timing_change[_timing_change_index] != null) {
        if (_music.currentTime > (_timing_change[_timing_change_index] * 58 / 60)) {
          _timing_change_index++;
          return _game_bg.tl.fadeOut(15).then(function() {
            _game_bg.image = _game.assets["game_bg" + (_timing_change_index + 1) + ".jpg"];
            return _game_bg.tl.fadeIn(15);
          });
        }
      }
    };

    _generateNoteCrap = function(number) {
      var note;
      note = new Sprite(160, 160);
      note.image = _game.assets["crap.png"];
      note.opacity = 0.5;
      note.number = number;
      note.x = 20;
      note.y = 200;
      note.timing = _timing_snap[number];
      _game.rootScene.addChild(note);
      note.tl.setTimeBased();
      note.tl.moveY(_window_height - 250, (_getTiming(_timing_crap[number]) - _music.currentTime) * 1000);
      note.addEventListener("touchstart", function(e) {
        _craping();
        this.clearTime = _music.currentTime;
        this.clear = true;
        return _game.assets['snap.wav'].clone().play();
      });
      return note.addEventListener("enterframe", function() {
        var ref, ref1;
        if (_music.currentTime > _getTiming(_timing_crap[number]) + 1) {
          _score -= 100;
          _score_txt.text = _score;
          _game.rootScene.removeChild(this);
        }
        if (this.clear) {
          this.opacity -= 0.2;
          this.scale(this.scaleX + 0.05, this.scaleY + 0.05);
          if (this.opacity <= 0) {
            _game.rootScene.removeChild(this);
            if (this.clearTime && (-0.2 <= (ref = this.clearTime - _getTiming(_timing_crap[number])) && ref <= 0.2)) {
              _judge.text = "COOL";
              _score += 100;
              _score_txt.text = _score;
              _fly();
              return _score_meter.width += 10;
            } else if (this.clearTime && (-0.4 <= (ref1 = this.clearTime - _getTiming(_timing_crap[number])) && ref1 <= 0.4)) {
              _judge.text = "GOOD";
              _score += 50;
              _score_txt.text = _score;
              return _score_meter.width += 5;
            } else {
              _judge.text = "BAD";
              return _score_txt.text = _score;
            }
          }
        }
      });
    };

    _fly = function() {
      var butterfly;
      butterfly = new Sprite(640, 377);
      butterfly.image = _game.assets["butterfly.png"];
      butterfly.x = 0;
      butterfly.y = 100;
      butterfly.scale(0.5, 0.5);
      butterfly.opacity = 0;
      _game.rootScene.addChild(butterfly);
      return butterfly.tl.fadeIn(5).then(function() {
        return butterfly.scale(1.5, 1.5);
      }).fadeOut(5).removeFromScene();
    };

    _generateNote = function(number) {
      var note;
      note = new Sprite(90, 90);
      note.image = _game.assets["icon.png"];
      note.number = number;
      note.x = 183;
      note.y = -90;
      note.timing = _timing_snap[number];
      _game.rootScene.addChild(note);
      note.tl.setTimeBased();
      note.tl.moveY(_window_height - 340 - 85, (_getTiming(_timing_snap[number]) - _music.currentTime) * 1000);
      note.addEventListener("touchstart", function(e) {});
      note.addEventListener("touchend", function(e) {});
      return note.addEventListener("enterframe", function() {
        var ref, ref1;
        if (this.intersect(_hover)) {
          _hover.tl.removeFromScene();
          _hover = null;
          this.clearTime = _music.currentTime;
          _game.assets['snap.wav'].clone().play();
          this.clear = true;
        }
        if (_music.currentTime > _getTiming(_timing_snap[number]) + 1) {
          _score -= 100;
          _score_txt.text = _score;
          _game.rootScene.removeChild(this);
        }
        if (this.clear) {
          this.opacity -= 0.2;
          this.scale(this.scaleX + 0.05, this.scaleY + 0.05);
          if (this.opacity <= 0) {
            _game.rootScene.removeChild(this);
            if (this.clearTime && (-0.2 <= (ref = this.clearTime - _getTiming(_timing_snap[number])) && ref <= 0.2)) {
              _judge.text = "COOL";
              _score += 100;
              _score_txt.text = _score;
              _fly();
              return _score_meter.width += 10;
            } else if (this.clearTime && (-0.4 <= (ref1 = this.clearTime - _getTiming(_timing_snap[number])) && ref1 <= 0.4)) {
              _judge.text = "GOOD";
              _score += 50;
              _score_txt.text = _score;
              return _score_meter.width += 5;
            } else {
              _judge.text = "BAD";
              _score -= 0;
              return _score_txt.text = _score;
            }
          }
        }
      });
    };

    _proccesRootSceneFrame = function() {
      if (_status === "playing") {
        if (_isNoteGenerateTimingSnap()) {
          _generateNote(_timing_snap_index);
          _timing_snap_index++;
        }
        if (_isNoteGenerateTimingCrap()) {
          _generateNoteCrap(_timing_crap_index);
          _timing_crap_index++;
        }
        _isChangeImage();
        if (_music.currentTime >= _endTime) {
          _music.stop();
          _status = "end";
          _end();
        }
        if (_score <= 0) {
          _music.stop();
          _status = "end";
          return _judge.text = "GAME OVER";
        }
      }
    };

    _end = function() {
      var final_score;
      _result = new Sprite(640, 1080);
      _result.image = _game.assets["result.jpg"];
      _result.addEventListener("touchstart", function(e) {});
      _game.rootScene.addChild(_result);
      _clear = new Sprite(640, 1080);
      _clear.image = _game.assets["clear.jpg"];
      _clear.addEventListener("touchstart", function(e) {
        return _clear.tl.removeFromScene();
      });
      _game.rootScene.addChild(_clear);
      final_score = new Label();
      final_score.font = "80px libelsuit";
      final_score.textAlign = "center";
      final_score.color = "#fff";
      final_score.width = 640;
      final_score.x = 0;
      final_score.y = 200;
      final_score.text = "Final Score : " + _score;
      return _game.rootScene.addChild(final_score);
    };

    return Game;

  })();

  this.Yt = (function() {
    var _isReady, _player, _state, onPlayerReady;

    _player = null;

    _isReady = false;

    _state = null;

    function Yt(parms) {
      var firstScriptTag, tag;
      tag = document.createElement('script');
      tag.src = 'https://www.youtube.com/iframe_api';
      firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    }

    Yt.prototype.play = function() {
      return _player.playVideo();
    };

    Yt.prototype.getCurrentTime = function() {
      return _player.getCurrentTime();
    };

    Yt.prototype.setVolume = function(volume) {
      return _player.setVolume(volume);
    };

    Yt.prototype.getVolume = function() {
      return _player.getVolume();
    };

    Yt.prototype.isReady = function() {
      return _isReady;
    };

    onPlayerReady = function() {
      return _isReady = true;
    };

    window.onYouTubeIframeAPIReady = function() {
      return _player = new YT.Player('player', {
        events: {
          'onReady': onPlayerReady
        }
      });
    };

    return Yt;

  })();

  new Game();

  $(function() {
    return $(window).on('load', function() {
      return setTimeout(scrollTo(0, 1), 0);
    });
  });

}).call(this);
